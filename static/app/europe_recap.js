// Generated by CoffeeScript 1.10.0
App.module("Recap", function(Mod, App, Backbone, Marionette, $, _) {
  var BlankView, Question, Questions, RecapItemView, RecapLayout, RecapView, TitleView, _options, handler, layout;
  Mod.startWithParent = false;
  _options = void 0;
  layout = void 0;
  Question = Backbone.Model.extend({
    idAttribute: 'id',
    defaults: {
      id: null,
      question: null,
      image: null,
      country: null,
      category: null,
      answer: null
    }
  });
  Questions = Backbone.Collection.extend({
    model: Question
  });
  TitleView = Marionette.ItemView.extend({
    tagName: "h3",
    template: function(serialized_model) {
      return _.template("<%= title %> / <%= difficulty %>")(serialized_model);
    },
    rerender: function(model) {
      this.model = model;
      return this.render();
    }
  });
  RecapItemView = Marionette.ItemView.extend({
    tagName: "div",
    className: "col-md-4 text-center well",
    attributes: function(a, b, c) {
      if (this.model.get('answer')) {
        return {
          style: "color:green; height:120px"
        };
      } else {
        return {
          style: "color:red; height:120px"
        };
      }
    },
    template: function(serialized_model) {
      return _.template("<%= question %><br>Odpověď: <%= country.title %><% if (image) {%><br><img height=\"20\" src=\"<%= image %>\" /><% } %>")(serialized_model);
    }
  });
  BlankView = Marionette.ItemView.extend({
    template: "<p>Nahrávám...</p>"
  });
  RecapView = Marionette.CollectionView.extend({
    childView: RecapItemView,
    emptyView: BlankView
  });
  RecapLayout = Marionette.LayoutView.extend({
    template: _.template("<div class=\"row\">\n    <div class=\"col-md-12\">\n        <h3 id=\"title\"></h3>\n    </div>\n</div>\n<div class=\"row\" id=\"recap\">\n</div>"),
    regions: {
      title: '#title',
      recap: '#recap'
    }
  });
  handler = function() {
    return window.channel.command('recap:close', _options);
  };
  Mod.onStart = function(options) {
    var questions, title;
    console.log('Recap module');
    console.log(options);
    _options = options;
    layout = new RecapLayout({
      el: make_content_wrapper()
    });
    layout.render();
    questions = new Questions(options.questions, {
      category: options.gamemode.category,
      difficulty: options.gamemode.difficulty
    });
    title = new Backbone.Model({
      title: options.gamemode.title,
      difficulty: options.gamemode.difficulty === _options.constants.DIFFICULTY_EASY ? "Jednoduchá obtížnost" : "Složitá obtížnost"
    });
    layout.getRegion('title').show(new TitleView({
      model: title
    }));
    layout.getRegion('recap').show(new RecapView({
      collection: questions
    }));
    window.channel.on('key', function(msg) {
      var set_new_timeout;
      set_new_timeout = true;
      if (msg === 'fire' || msg === 'left' || msg === 'right') {
        window.sfx.button2.play();
        set_delay(function() {
          return window.channel.command('recap:close', _options);
        }, 100);
        set_new_timeout = false;
      } else {
        set_new_timeout = false;
      }
      if (set_new_timeout) {
        window.sfx.button.play();
        return set_delay(handler, _options.options.IDLE_RECAP);
      }
    });
    return set_delay(handler, _options.options.IDLE_RECAP);
  };
  return Mod.onStop = function() {
    window.channel.off('key');
    clear_delay();
    layout.destroy();
    return layout = void 0;
  };
});
