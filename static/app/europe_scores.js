// Generated by CoffeeScript 1.10.0
App.module("Scores", function(Mod, App, Backbone, Marionette, $, _) {
  var Categories, Category, CategoryResultItemView, CategoryResultView, DIFFICULTY_EASY, DIFFICULTY_HARD, Result, Results, ScoreLayout, TitleView, _options, categories;
  Mod.startWithParent = false;
  _options = void 0;
  categories = void 0;
  DIFFICULTY_EASY = 'E';
  DIFFICULTY_HARD = 'H';
  Result = Backbone.Model.extend({
    defaults: {
      name: void 0,
      time: void 0,
      category: void 0
    }
  });
  Results = Backbone.Collection.extend({
    model: Result,
    initialize: function(category, difficulty) {
      return this.url = "/api/results/" + category + "?difficulty=" + difficulty;
    },
    parse: function(response, options) {
      return response.results;
    }
  });
  Category = Backbone.Model.extend({
    idAttribute: 'id',
    defaults: {
      id: void 0,
      title: void 0,
      active: false,
      order: void 0
    }
  });
  Categories = Backbone.Collection.extend({
    model: Category,
    comparator: 'order',
    url: '/api/categories',
    parse: function(response, options) {
      return response.results;
    },
    set_active: function(index) {
      var obj;
      if (this.length < 1) {
        return;
      }
      if (!index || index < 0 || index >= this.length) {
        index = 0;
      }
      obj = this.at(index);
      if (obj !== void 0) {
        this.each(function(i) {
          if (i.get('active')) {
            return i.set('active', false);
          }
        });
        obj.set('active', true);
      }
      this.trigger('change');
      return index;
    }
  });
  TitleView = Marionette.ItemView.extend({
    tagName: "h3",
    template: function(serialized_model) {
      return _.template("Kategorie <%= title %>")(serialized_model);
    }
  });
  CategoryResultItemView = Marionette.ItemView.extend({
    tagName: "tr",
    template: function(serialized_model) {
      return _.template("<td><%= name %></td>\n<td class=\"text-right\"><%= show_time() %></td>")(serialized_model);
    },
    templateHelpers: function() {
      return {
        show_time: function() {
          return display_elapsed(this.time);
        }
      };
    }
  });
  CategoryResultView = Marionette.CollectionView.extend({
    childView: CategoryResultItemView,
    tagName: 'table',
    className: 'table',
    initialize: function(options) {
      return this.collection.on('sync', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    },
    onDestroy: function() {
      return this.collection.off('sync');
    }
  });
  ScoreLayout = Marionette.LayoutView.extend({
    template: _.template("<div class=\"row\">\n    <div class=\"col-md-12\">\n        <h3 id=\"title\"></h3>\n    </div>\n\n    <div class=\"col-md-6\">\n        <h3>Malá obtížnost</h3>\n        <div id=\"easy-results\"></div>\n    </div>\n    <div class=\"col-md-1\"></div>\n    <div class=\"col-md-5\">\n        <h3>Velká obtížnost</h3>\n        <div id=\"hard-results\"></div>\n    </div>\n    <div class=\"col-md-12\">\n        <p>Nápověda: zmáčkni vlevo/vpravo pro zobrazení dalších kategorií s výsledkama, OK pro návrat</p>\n    </div>\n</div>"),
    regions: {
      title: '#title',
      easy: '#easy-results',
      hard: '#hard-results'
    }
  });
  Mod.onStart = function(options) {
    _options = options;
    categories = new Categories();
    categories.fetch();
    return categories.on('sync', function() {
      var easy_results, easy_view, hard_results, hard_view, layout, result, title_view;
      result = categories.at(0);
      easy_results = new Results(result.get('id'), DIFFICULTY_EASY);
      hard_results = new Results(result.get('id'), DIFFICULTY_HARD);
      title_view = new TitleView({
        model: result
      });
      easy_view = new CategoryResultView({
        collection: easy_results
      });
      hard_view = new CategoryResultView({
        collection: hard_results
      });
      layout = new ScoreLayout({
        el: make_content_wrapper()
      });
      layout.render();
      layout.getRegion('title').show(title_view);
      layout.getRegion('easy').show(easy_view);
      layout.getRegion('hard').show(hard_view);
      easy_results.fetch();
      return hard_results.fetch();
    });
  };
  return Mod.onStop = function() {
    clear_delay();
    return view.destroy();
  };
});
